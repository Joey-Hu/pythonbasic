#!/usr/bin/env python
# encoding: utf-8

# @author: huhao
# @Software : PyCharm
# @file: Group_aggregation.py
# @time: 2019/6/27 14:29
# @Ducument：https://www.python.org/doc/
# @desc:

import numpy as np
import pandas as pd
from pandas import Series, DataFrame

'''
数据聚合是数据处理的最后一步，通常是使每一个数组生成一个单一的数值
数据分类处理：
    - 分组：先把数据分为几组
    - 用函数处理：为不同组的数据用不同的函数以转换数据
    - 合并：把不同组得到的结果合并起来

数据分类的核心：groupby()

'''

# item = np.random.randint(0,10,size=100).tolist()
# sailer = np.random.randint(0,10,size=100).tolist()
# weight = np.random.randint(30,300,size=100).tolist()
# price = 20*np.random.random_sample(size=100).round(2)
# print(item)
# print(sailer)
# print(weight)
# print(price.tolist())

df = DataFrame({'item': [4, 8, 5, 7, 9, 3, 6, 3, 8, 4, 5, 1, 7, 8, 6, 0, 7, 9, 4, 5, 1, 1, 0, 8, 7, 5, 2, 3, 6, 5, 4, 6,
                         5, 7, 7, 0, 8, 0, 9, 3, 6, 9, 3, 5, 7, 4, 4, 8, 3, 8, 8, 5, 6, 6, 9, 4, 8, 9, 9, 7, 5, 6, 0, 1,
                         4, 8, 6, 2, 2, 3, 2, 5, 9, 2, 5, 4, 6, 1, 5, 5, 9, 9, 6, 1, 7, 6, 0, 8, 3, 8, 8, 1, 6, 5, 1, 7,
                         6, 4, 4, 7],
                'sailer': [2, 5, 6, 6, 8, 1, 0, 6, 8, 6, 8, 1, 0, 4, 0, 0, 4, 5, 0, 3, 4, 7, 7, 9, 9, 6, 9, 0, 9, 7, 5,
                           2, 8, 8, 5, 7, 8, 7, 2, 8, 7, 4, 1, 7, 9, 4, 1, 3, 5, 2, 6, 6, 1, 3, 0, 7, 9, 7, 8, 4, 8, 1,
                           2, 0, 3, 0, 6, 4, 5, 6, 8, 3, 8, 6, 0, 1, 6, 3, 8, 9, 0, 4, 4, 6, 8, 8, 9, 7, 8, 7, 3, 2, 1,
                           8, 1, 7, 3, 2, 0, 5],
                'weight': [239, 252, 80, 230, 48, 215, 46, 241, 277, 286, 280, 186, 168, 150, 224, 73, 66, 170, 107, 94,
                           130, 56, 142, 237, 250, 99, 145, 123, 173, 91, 134, 125, 263, 282, 176, 222, 139, 200, 219,
                           88, 35, 252, 210, 119, 72, 261, 166, 136, 75, 45, 179, 113, 251, 185, 229, 142, 216, 158,
                           170, 54, 236, 167, 254, 274, 108, 189, 46, 80, 204, 67, 92, 104, 85, 263, 278, 176, 276, 41,
                           208, 152, 51, 116, 268, 153, 287, 32, 174, 187, 113, 154, 166, 139, 215, 47, 131, 66, 298,
                           215, 59, 174],
                'price': [16.4, 16.4, 9.8, 16.8, 18.2, 2.6, 8.0, 6.6, 1.4, 3.4, 11.2, 17.8, 17.6, 7.6, 9.4, 17.8, 11.4,
                          10.6, 3.4, 5.4, 16.2, 14.2, 19.6, 17.6, 16.8, 8.4, 8.6, 0.8, 15.6, 5.6, 13.0, 5.6, 2.0, 17.2,
                          6.0, 19.4, 5.8, 17.6, 14.2, 17.0, 9.2, 5.8, 7.0, 8.2, 14.6, 4.0, 2.4, 4.2, 10.0, 8.6, 12.8,
                          11.8, 2.6, 12.0, 7.6, 0.2, 11.8, 19.0, 9.2, 2.2, 10.0, 1.4, 13.0, 9.6, 2.0, 10.4, 16.6, 17.2,
                          12.4, 9.2, 14.4, 12.8, 4.6, 19.8, 19.8, 4.2, 6.8, 17.6, 12.8, 8.0, 0.2, 8.2, 1.8, 16.4, 14.4,
                          15.8, 16.4, 15.8, 14.4, 1.2, 3.2, 7.2, 16.6, 5.8, 6.8, 12.4, 16.0, 12.8, 8.8, 2.8]})

print(df)


# 按item分组
def convert_item(x):
    if x < 2:
        return '萝卜'
    elif x < 7:
        return '白菜'
    else:
        return '青椒'


df['item'] = df['item'].map(convert_item)
print("***************")
print(df)


# df.to_excel('./vagetables.xlsx')

# 按sailer分组
def convert_sailer(x):
    if x < 5:
        return "张大妈"
    elif x < 7:
        return "赵大爷"
    else:
        return '李大妈'


df['sailer'] = df['sailer'].map(convert_sailer)
print("***************")
print(df)
'''
   item  price sailer  weight
0    白菜   16.4    张大妈     239
1    青椒   16.4    赵大爷     252
2    白菜    9.8    赵大爷      80
3    青椒   16.8    赵大爷     230
4    青椒   18.2    李大妈      48
5    白菜    2.6    张大妈     215
6    白菜    8.0    张大妈      46
7    白菜    6.6    赵大爷     241
8    青椒    1.4    李大妈     277
9    白菜    3.4    赵大爷     286
10   白菜   11.2    李大妈     280
11   萝卜   17.8    张大妈     186
12   青椒   17.6    张大妈     168
13   青椒    7.6    张大妈     150
14   白菜    9.4    张大妈     224
15   萝卜   17.8    张大妈      73
16   青椒   11.4    张大妈      66
17   青椒   10.6    赵大爷     170
18   白菜    3.4    张大妈     107
19   白菜    5.4    张大妈      94
20   萝卜   16.2    张大妈     130
21   萝卜   14.2    李大妈      56
22   萝卜   19.6    李大妈     142
23   青椒   17.6    李大妈     237
24   青椒   16.8    李大妈     250
25   白菜    8.4    赵大爷      99
26   白菜    8.6    李大妈     145
27   白菜    0.8    张大妈     123
28   白菜   15.6    李大妈     173
29   白菜    5.6    李大妈      91
..  ...    ...    ...     ...
70   白菜   14.4    李大妈      92
71   白菜   12.8    张大妈     104
72   青椒    4.6    李大妈      85
73   白菜   19.8    赵大爷     263
74   白菜   19.8    张大妈     278
75   白菜    4.2    张大妈     176
76   白菜    6.8    赵大爷     276
77   萝卜   17.6    张大妈      41
78   白菜   12.8    李大妈     208
79   白菜    8.0    李大妈     152
80   青椒    0.2    张大妈      51
81   青椒    8.2    张大妈     116
82   白菜    1.8    张大妈     268
83   萝卜   16.4    赵大爷     153
84   青椒   14.4    李大妈     287
85   白菜   15.8    李大妈      32
86   萝卜   16.4    李大妈     174
87   青椒   15.8    李大妈     187
88   白菜   14.4    李大妈     113
89   青椒    1.2    李大妈     154
90   青椒    3.2    张大妈     166
91   萝卜    7.2    张大妈     139
92   白菜   16.6    张大妈     215
93   白菜    5.8    李大妈      47
94   萝卜    6.8    张大妈     131
95   青椒   12.4    李大妈      66
96   白菜   16.0    张大妈     298
97   白菜   12.8    张大妈     215
98   白菜    8.8    张大妈      59
99   青椒    2.8    赵大爷     174

[100 rows x 4 columns]
'''

# 修改列顺序
order = ['item', 'sailer', 'weight', 'price']
df = df[order]
print(df)
'''
   item sailer  weight  price
0    白菜    张大妈     239   16.4
1    青椒    赵大爷     252   16.4
2    白菜    赵大爷      80    9.8
3    青椒    赵大爷     230   16.8
4    青椒    李大妈      48   18.2
5    白菜    张大妈     215    2.6
6    白菜    张大妈      46    8.0
7    白菜    赵大爷     241    6.6
8    青椒    李大妈     277    1.4
9    白菜    赵大爷     286    3.4
10   白菜    李大妈     280   11.2
11   萝卜    张大妈     186   17.8
12   青椒    张大妈     168   17.6
13   青椒    张大妈     150    7.6
14   白菜    张大妈     224    9.4
15   萝卜    张大妈      73   17.8
16   青椒    张大妈      66   11.4
17   青椒    赵大爷     170   10.6
18   白菜    张大妈     107    3.4
19   白菜    张大妈      94    5.4
20   萝卜    张大妈     130   16.2
21   萝卜    李大妈      56   14.2
22   萝卜    李大妈     142   19.6
23   青椒    李大妈     237   17.6
24   青椒    李大妈     250   16.8
25   白菜    赵大爷      99    8.4
26   白菜    李大妈     145    8.6
27   白菜    张大妈     123    0.8
28   白菜    李大妈     173   15.6
29   白菜    李大妈      91    5.6
..  ...    ...     ...    ...
70   白菜    李大妈      92   14.4
71   白菜    张大妈     104   12.8
72   青椒    李大妈      85    4.6
73   白菜    赵大爷     263   19.8
74   白菜    张大妈     278   19.8
75   白菜    张大妈     176    4.2
76   白菜    赵大爷     276    6.8
77   萝卜    张大妈      41   17.6
78   白菜    李大妈     208   12.8
79   白菜    李大妈     152    8.0
80   青椒    张大妈      51    0.2
81   青椒    张大妈     116    8.2
82   白菜    张大妈     268    1.8
83   萝卜    赵大爷     153   16.4
84   青椒    李大妈     287   14.4
85   白菜    李大妈      32   15.8
86   萝卜    李大妈     174   16.4
87   青椒    李大妈     187   15.8
88   白菜    李大妈     113   14.4
89   青椒    李大妈     154    1.2
90   青椒    张大妈     166    3.2
91   萝卜    张大妈     139    7.2
92   白菜    张大妈     215   16.6
93   白菜    李大妈      47    5.8
94   萝卜    张大妈     131    6.8
95   青椒    李大妈      66   12.4
96   白菜    张大妈     298   16.0
97   白菜    张大妈     215   12.8
98   白菜    张大妈      59    8.8
99   青椒    赵大爷     174    2.8

[100 rows x 4 columns]
'''

# 统计张大妈，赵大爷，李大妈销售了多少斤蔬菜

ret = df.groupby(['sailer'])['weight']
print(ret)

# 分好组了，没有进行计算
print(ret.sum())  # 还有ret.mean(),ret.var(),ret.max()...
'''
sailer
张大妈    7283
李大妈    5638
赵大爷    3218
Name: weight, dtype: int64
'''

# 统计张大妈，赵大爷，李大妈出摊次数
print(ret.count())
'''
sailer
张大妈    45
李大妈    36
赵大爷    19
Name: weight, dtype: int64
'''


# # 还有一种方法
# def sailer_count(x):
#     return x.size
#
# print(ret.apply(sailer_count))
# '''
# sailer
# 张大妈    45
# 李大妈    36
# 赵大爷    19
# Name: weight, dtype: int64
# '''

# 自定义函数
# def analysis(x):
#     # return (x.size(),x.sum(),x.mean().round(1))      报错
#     return (x.size(), x.sum(), )
#
#
# print(ret.apply(analysis))

g = df.groupby(['sailer','item'])
print(g.mean())
'''
                 weight      price
sailer item                       
张大妈    白菜    175.583333   8.041667
       萝卜    153.500000  13.250000
       青椒    141.615385   7.784615
李大妈    白菜    138.500000   9.925000
       萝卜    158.800000  17.440000
       青椒    175.200000  12.000000
赵大爷    白菜    157.000000  10.650000
       萝卜    153.000000  16.400000
       青椒    196.833333  10.900000
'''

# 价格求平均，销量求总和
g = g.agg({'weight':'sum','price':'mean'}).round(2)
'''
                 weight      price
sailer item                       
张大妈    白菜    175.583333   8.041667
       萝卜    153.500000  13.250000
       青椒    141.615385   7.784615
李大妈    白菜    138.500000   9.925000
       萝卜    158.800000  17.440000
       青椒    175.200000  12.000000
赵大爷    白菜    157.000000  10.650000
       萝卜    153.000000  16.400000
       青椒    196.833333  10.900000
'''
# 求销售额      --未解决
def sales(x):
    return x['weight']*x['price']

print(g.apply(sales))



