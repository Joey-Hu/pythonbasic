# @author: huhao
# @file: Matrix.py
# @time: 2019/7/13 9:00
# @Document：https://www.python.org/doc/
# @desc:


import numpy as np
import scipy as sp
from scipy import matrix

# print(np.random.randint(0,100,size=(10000,10000)))
m1 = matrix(data=[[6, 3, 6, 6], [6, 3, 4, 4], [7, 8, 9, 9], [3, 9, 7, 9], [1, 1, 6, 1]])
m2 = matrix(data=[[6, 9, 7, 0, 8], [0, 6, 9, 3, 6], [6, 1, 6, 9, 1], [1, 1, 8, 9, 3]])

print(type(m1))     # <class 'numpy.matrix'>

print(m1.dot(m2))
'''
[[ 78  84 153 117  90]
 [ 64  80 125  81  82]
 [105 129 247 186 140]
 [ 69  97 216 171 112]
 [ 43  22  60  66  23]]
'''

nd = np.random.randint(0,100,size=(10000,10000))
m3 = matrix(data=nd)

print(m3)

m3[m3<98] = 0
print(m3)
'''
[[ 0  0  0 ...  0  0  0]
 [ 0  0  0 ...  0  0  0]
 [ 0  0  0 ...  0  0  0]
 ...
 [ 0  0  0 ...  0  0  0]
 [ 0  0  0 ...  0  0  0]
 [ 0  0  0 ... 99  0  0]]
'''

# 稀松矩阵  大部分是0，小部分是数据  减小数据所占的内存

from scipy import sparse

m4 = sparse.csc_matrix(m3)
print(m4)
'''
  (28, 0)	99
  (75, 0)	99
  (144, 0)	99
  (145, 0)	99
  (160, 0)	99
  (247, 0)	98
  (267, 0)	99
  (287, 0)	99
  (292, 0)	98
  (343, 0)	99
  (351, 0)	98
  (384, 0)	99
  (420, 0)	99
  (464, 0)	99
  (644, 0)	99
  (684, 0)	98
  (745, 0)	99
  (858, 0)	98
  (935, 0)	98
  (1000, 0)	99
  (1011, 0)	98
  (1031, 0)	98
  (1058, 0)	98
  (1097, 0)	99
  (1125, 0)	98
  :	:
  (9064, 9999)	98
  (9071, 9999)	99
  (9096, 9999)	98
  (9119, 9999)	98
  (9164, 9999)	98
  (9173, 9999)	98
  (9179, 9999)	99
  (9184, 9999)	99
  (9191, 9999)	99
  (9197, 9999)	98
  (9243, 9999)	99
  (9301, 9999)	99
  (9319, 9999)	99
  (9342, 9999)	99
  (9373, 9999)	98
  (9402, 9999)	98
  (9413, 9999)	98
  (9473, 9999)	98
  (9596, 9999)	98
  (9600, 9999)	99
  (9627, 9999)	98
  (9664, 9999)	98
  (9780, 9999)	98
  (9919, 9999)	99
  (9969, 9999)	99

'''